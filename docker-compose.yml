version: '3.9'
services:

  db:
    container_name: iteen.db
    image: postgres:15.2
    networks: 
      - iteen
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
    volumes:
      - .local/data:/var/lib/postgresql/data
    init: true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d testbase"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  pgadmin:
    container_name: iteen.pgadmin
    image: dpage/pgadmin4:7.1
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: ${PGADMIN_CONFIG_SERVER_MODE}
    volumes:
      - .local/pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: always
    networks:
      - iteen
    depends_on:
      - db

  webapp:
    build:
      args:
        - PIP_VERSION=${WEBAPP_PIP_VERSION:-23.1.2}
        - POETRY_VERSION=${WEBAPP_POETRY_VERSION:-1.4.2}
        - PYTHON_VERSION=${WEBAPP_PYTHON_VERSION:-3.11}
        - VERSION=${WEBAPP_VERSION:-dev}
      context: .
    container_name: iteen.webapp
    image: webapp:latest
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: ${PRIMARY_DATABASE_URL}
      DEBUG_MODE: ${DEBUG_MODE}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_BACKEND: ${EMAIL_BACKEND}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      EMAIL_PORT: ${EMAIL_PORT}
    networks:
      - iteen
    ports:
      - "8000:8000"
    volumes:
      - .local/:/app/:ro
    init: true
    depends_on:
      db:
        condition: service_healthy
      
networks:
  iteen:
    name: iteen.network
    driver: bridge
